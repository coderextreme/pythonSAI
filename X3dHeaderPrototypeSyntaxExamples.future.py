import x3dpsail


X3D0 = (x3dpsail.X3D().setProfile(x3dpsail.SFString("Immersive")).setVersion(x3dpsail.SFString("3.3"))
      .setHead(x3dpsail.head()
        .addComponent(x3dpsail.component().setName(x3dpsail.SFString("Geospatial")).setLevel(x3dpsail.SFInt32(1)))
        .addComponent(x3dpsail.component().setName(x3dpsail.SFString("NURBS")).setLevel(x3dpsail.SFInt32(2)))
        .addComponent(x3dpsail.component().setName(x3dpsail.SFString("Core")).setLevel(x3dpsail.SFInt32(2)))
        .addComponent(x3dpsail.component().setName(x3dpsail.SFString("Navigation")).setLevel(x3dpsail.SFInt32(1)))
        .addComponent(x3dpsail.component().setName(x3dpsail.SFString("Text")).setLevel(x3dpsail.SFInt32(1)))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("title")).setContent(x3dpsail.SFString("X3dHeaderPrototypeSyntaxExamples.x3d")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("description")).setContent(x3dpsail.SFString("X3D scene header and prototype syntax examples. This example header indicates that the content is XML encoded, follows the Interactive Profile and explicitly lists additional necessary components. The X3D header may also contain additional semantic information. Used for specification EXAMPLE excerpts in 19776:1 XML Encoding.")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("created")).setContent(x3dpsail.SFString("14 October 2002")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("modified")).setContent(x3dpsail.SFString("7 May 2017")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("creator")).setContent(x3dpsail.SFString("Don Brutzman")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("specificationSection")).setContent(x3dpsail.SFString("X3D encodings, ISO/IEC 19776-1.3, Part 1: XML encoding, 4.3 XML file syntax")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("specificationUrl")).setContent(x3dpsail.SFString("http://www.web3d.org/documents/specifications/19776-1/V3.3/Part01/concepts.html#XMLFileSyntax")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("identifier")).setContent(x3dpsail.SFString("http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/X3dHeaderPrototypeSyntaxExamples.x3d")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("generator")).setContent(x3dpsail.SFString("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("license")).setContent(x3dpsail.SFString("../license.html"))))
      .setScene(x3dpsail.Scene()
        .addChild(x3dpsail.ExternProtoDeclare().setName(x3dpsail.SFString("ViewPositionOrientation")).setUrl(x3dpsail.MFString(["../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation"]))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("enabled")).setAccessType(x3dpsail.SFString("inputOutput")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("traceEnabled")).setAccessType(x3dpsail.SFString("initializeOnly")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("set_traceEnabled")).setAccessType(x3dpsail.SFString("inputOnly")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("position_changed")).setAccessType(x3dpsail.SFString("outputOnly")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("orientation_changed")).setAccessType(x3dpsail.SFString("outputOnly")).setType(x3dpsail.SFString("SFRotation")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("outputViewpointString")).setAccessType(x3dpsail.SFString("outputOnly")).setType(x3dpsail.SFString("MFString"))))
        .addChild(x3dpsail.ProtoDeclare().setName(x3dpsail.SFString("NewWorldInfoNode"))
          .setProtoBody(x3dpsail.ProtoBody()
            .addChild(x3dpsail.WorldInfo().setDEF(x3dpsail.SFString("ExamplePrototypeBody")))))
        .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("NewWorldInfoNode")))
        .addChild(x3dpsail.ProtoDeclare().setName(x3dpsail.SFString("EmissiveMaterial"))
          .setProtoInterface(x3dpsail.ProtoInterface()
            .addField(x3dpsail.field().setName(x3dpsail.SFString("onlyColor")).setAccessType(x3dpsail.SFString("inputOutput")).setType(x3dpsail.SFString("SFColor")).setValue(x3dpsail.SFString("1 0 0"))))
          .setProtoBody(x3dpsail.ProtoBody()
            #Override default diffuseColor value 0.8 0.8 0.8

            .addChild(x3dpsail.Material().setDiffuseColor(x3dpsail.SFColor(0,0,0))
              #Connect emissiveColor field of current node to onlyColor field of parent ProtoDeclare.

              .setIS(x3dpsail.IS()
                .addConnect(x3dpsail.connect().setNodeField(x3dpsail.SFString("emissiveColor")).setProtoField(x3dpsail.SFString("onlyColor")))))))
        .addChild(x3dpsail.ProtoDeclare().setName(x3dpsail.SFString("ShiftGroupUp2m"))
          .setProtoInterface(x3dpsail.ProtoInterface()
            .addField(x3dpsail.field().setName(x3dpsail.SFString("children")).setAccessType(x3dpsail.SFString("inputOutput")).setType(x3dpsail.SFString("MFNode"))
              .addChild(x3dpsail.Group().setDEF(x3dpsail.SFString("DefaultNodeValue")).setBboxSize(x3dpsail.SFVec3f(2,2,2))
                #Authors need to override this node when creating the ProtoInstance fieldValue name=\"children\"

                )))
          .setProtoBody(x3dpsail.ProtoBody()
            .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,2,0))
              .addChild(x3dpsail.Group()
                .setIS(x3dpsail.IS()
                  .addConnect(x3dpsail.connect().setNodeField(x3dpsail.SFString("children")).setProtoField(x3dpsail.SFString("children"))))))))
        .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("ShiftGroupUp2m")))
        #====================

        .addChild(x3dpsail.Viewpoint().setDEF(x3dpsail.SFString("ExampleSingleElement")).setDescription(x3dpsail.SFString("Hello syntax")))
        .addChild(x3dpsail.Group().setDEF(x3dpsail.SFString("ExampleChildElement"))
          .addChild(x3dpsail.Shape()
            .setGeometry(x3dpsail.Box())
            .setAppearance(x3dpsail.Appearance()
              .setMaterial(x3dpsail.Material().setDiffuseColor(x3dpsail.SFColor(0.6,0.4,0.2))))))
        .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("TransformExampleUSE")).setRotation(x3dpsail.SFRotation(0,1,0,0.78)).setTranslation(x3dpsail.SFVec3f(0,2.5,0))
          .addChild(x3dpsail.Group().setUSE(x3dpsail.SFString("ExampleChildElement"))))
        .addChild(x3dpsail.Collision()
          .setProxy(x3dpsail.Shape()
            #note that Collision proxy Shape is not rendered

            #alternative: Text string='\"He said, \\&quot;Immel did it!\\&quot;\"'

            .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["He said, \"Immel did it!\""])))
            .setAppearance(x3dpsail.Appearance()
              .setMaterial(x3dpsail.Material())))
          .setProxy(x3dpsail.Group().setUSE(x3dpsail.SFString("ExampleChildElement"))))
        .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,-2.5,0))
          .addChild(x3dpsail.Shape()
            .setAppearance(x3dpsail.Appearance()
              .setMaterial(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("EmissiveMaterial"))
                .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("onlyColor")).setValue(x3dpsail.SFString("0.2 0.6 0.6")))))
            .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["X3D Header Prototype syntax examples","(view console for EXTERNPROTO output)"]))
              .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"])).setSize(x3dpsail.SFFloat(0.6))))))
        .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("ViewPositionOrientation"))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("enabled")).setValue(x3dpsail.SFString("true"))))
        .addChild(x3dpsail.TimeSensor().setDEF(x3dpsail.SFString("Clock")).setCycleInterval(x3dpsail.SFTime(4)).setLoop(x3dpsail.SFBool(True)))
        .addChild(x3dpsail.OrientationInterpolator().setDEF(x3dpsail.SFString("Spinner")).setKey(x3dpsail.MFFloat([0,0.5,1])).setKeyValue(x3dpsail.MFRotation([0,1,0,0,0,1,0,3.14159,0,1,0,6.28318])))
        .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("fraction_changed")).setFromNode(x3dpsail.SFString("Clock")).setToField(x3dpsail.SFString("set_fraction")).setToNode(x3dpsail.SFString("Spinner")))
        .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("value_changed")).setFromNode(x3dpsail.SFString("Spinner")).setToField(x3dpsail.SFString("rotation")).setToNode(x3dpsail.SFString("TransformExampleUSE")))
        .addChild(x3dpsail.Inline().setDEF(x3dpsail.SFString("someInline")).setUrl(x3dpsail.MFString(["someUrl.x3d","http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/someUrl.x3d"])))
        .addChild(x3dpsail.IMPORT().setAS(x3dpsail.SFString("someInlineRoot")).setImportedDEF(x3dpsail.SFString("someName")).setInlineDEF(x3dpsail.SFString("someInline")))
        .addChild(x3dpsail.PositionInterpolator().setDEF(x3dpsail.SFString("StayInPlace")).setKey(x3dpsail.MFFloat([0,1])).setKeyValue(x3dpsail.MFVec3f([0,0,0,0,0,0])))
        .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("fraction_changed")).setFromNode(x3dpsail.SFString("Clock")).setToField(x3dpsail.SFString("set_fraction")).setToNode(x3dpsail.SFString("StayInPlace")))
        .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("value_changed")).setFromNode(x3dpsail.SFString("StayInPlace")).setToField(x3dpsail.SFString("set_translation")).setToNode(x3dpsail.SFString("someInlineRoot")))))

X3D0.toFileX3D("./future/./X3dHeaderPrototypeSyntaxExamples_RoundTrip.x3d")
