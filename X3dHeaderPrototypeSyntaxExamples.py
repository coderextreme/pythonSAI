from jnius import autoclass
from X3Dautoclass import *
X3D0 =  X3DObject().setProfile("Immersive").setVersion("3.2")
head1 = headObject()
component2 = componentObject().setName("Geospatial").setLevel(1)
head1.addComponent(component2)
component3 = componentObject().setName("NURBS").setLevel(2)
head1.addComponent(component3)
component4 = componentObject().setName("Core").setLevel(2)
head1.addComponent(component4)
component5 = componentObject().setName("Navigation").setLevel(1)
head1.addComponent(component5)
component6 = componentObject().setName("Text").setLevel(1)
head1.addComponent(component6)
meta7 = metaObject().setName("title").setContent("X3dHeaderPrototypeSyntaxExamples.x3d")
head1.addMeta(meta7)
meta8 = metaObject().setName("description").setContent("X3D scene header and prototype syntax examples. This example header indicates that the content is XML encoded, follows the Interactive Profile and explicitly lists additional necessary components. The X3D header may also contain additional semantic information. Used for specification EXAMPLE excerpts in 19776:1 XML Encoding.")
head1.addMeta(meta8)
meta9 = metaObject().setName("created").setContent("14 October 2002")
head1.addMeta(meta9)
meta10 = metaObject().setName("modified").setContent("26 November 2015")
head1.addMeta(meta10)
meta11 = metaObject().setName("creator").setContent("Don Brutzman")
head1.addMeta(meta11)
meta12 = metaObject().setName("specificationSection").setContent("X3D encodings, ISO/IEC 19776-1.3, Part 1: XML encoding, 4.3 XML file syntax")
head1.addMeta(meta12)
meta13 = metaObject().setName("specificationUrl").setContent("http://www.web3d.org/documents/specifications/19776-1/V3.3/Part01/concepts.html#XMLFileSyntax")
head1.addMeta(meta13)
meta14 = metaObject().setName("identifier").setContent("http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/X3dHeaderPrototypeSyntaxExamples.x3d")
head1.addMeta(meta14)
meta15 = metaObject().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit")
head1.addMeta(meta15)
meta16 = metaObject().setName("license").setContent("../license.html")
head1.addMeta(meta16)
X3D0.setHead(head1)
Scene17 = SceneObject()
ExternProtoDeclare18 = ExternProtoDeclareObject().setName("ViewPositionOrientation").setUrl(["../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation"])
field19 = fieldObject().setType(fieldObject.TYPE_SFBOOL).setName("enabled").setAccessType(fieldObject.ACCESSTYPE_INPUTOUTPUT)
ExternProtoDeclare18.addField(field19)
field20 = fieldObject().setType(fieldObject.TYPE_SFBOOL).setName("traceEnabled").setAccessType(fieldObject.ACCESSTYPE_INITIALIZEONLY)
ExternProtoDeclare18.addField(field20)
field21 = fieldObject().setType(fieldObject.TYPE_SFBOOL).setName("set_traceEnabled").setAccessType(fieldObject.ACCESSTYPE_INPUTONLY)
ExternProtoDeclare18.addField(field21)
field22 = fieldObject().setType(fieldObject.TYPE_SFVEC3F).setName("position_changed").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY)
ExternProtoDeclare18.addField(field22)
field23 = fieldObject().setType(fieldObject.TYPE_SFROTATION).setName("orientation_changed").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY)
ExternProtoDeclare18.addField(field23)
field24 = fieldObject().setType(fieldObject.TYPE_MFSTRING).setName("outputViewpointString").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY)
ExternProtoDeclare18.addField(field24)
Scene17.addChild(ExternProtoDeclare18)
ProtoDeclare25 = ProtoDeclareObject().setName("NewWorldInfoNode")
ProtoBody26 = ProtoBodyObject()
WorldInfo27 = WorldInfoObject().setDEF("ExamplePrototypeBody")
ProtoBody26.addChild(WorldInfo27)
ProtoDeclare25.setProtoBody(ProtoBody26)
Scene17.addChild(ProtoDeclare25)
ProtoInstance28 = ProtoInstanceObject().setName("NewWorldInfoNode")
Scene17.addChild(ProtoInstance28)
ProtoDeclare29 = ProtoDeclareObject().setName("EmissiveMaterial")
ProtoInterface30 = ProtoInterfaceObject()
field31 = fieldObject().setType(fieldObject.TYPE_SFCOLOR).setName("onlyColor").setAccessType(fieldObject.ACCESSTYPE_INPUTOUTPUT).setValue("1 0 0")
ProtoInterface30.addField(field31)
ProtoDeclare29.setProtoInterface(ProtoInterface30)
ProtoBody32 = ProtoBodyObject()

ProtoBody32.addComments(CommentsBlock("Override default diffuseColor value 0.8 0.8 0.8"))
Material33 = MaterialObject().setDiffuseColor([0,0,0])

Material33.addComments(CommentsBlock("Connect emissiveColor field of current node to onlyColor field of parent ProtoDeclare."))
IS34 = ISObject()
connect35 = connectObject().setNodeField("emissiveColor").setProtoField("onlyColor")
IS34.addConnect(connect35)
Material33.setIS(IS34)
ProtoBody32.addChild(Material33)
ProtoDeclare29.setProtoBody(ProtoBody32)
Scene17.addChild(ProtoDeclare29)
ProtoDeclare36 = ProtoDeclareObject().setName("ShiftGroupUp2m")
ProtoInterface37 = ProtoInterfaceObject()
field38 = fieldObject().setType(fieldObject.TYPE_MFNODE).setName("children").setAccessType(fieldObject.ACCESSTYPE_INPUTOUTPUT)
Group39 = GroupObject().setDEF("DefaultNodeValue").setBboxSize([2,2,2])

Group39.addComments(CommentsBlock("Authors need to override this node when creating the ProtoInstance fieldValue name=\"children\""))
field38.addChild(Group39)
ProtoInterface37.addField(field38)
ProtoDeclare36.setProtoInterface(ProtoInterface37)
ProtoBody40 = ProtoBodyObject()
Transform41 = TransformObject().setTranslation([0,2,0])
Group42 = GroupObject()
IS43 = ISObject()
connect44 = connectObject().setNodeField("children").setProtoField("children")
IS43.addConnect(connect44)
Group42.setIS(IS43)
Transform41.addChild(Group42)
ProtoBody40.addChild(Transform41)
ProtoDeclare36.setProtoBody(ProtoBody40)
Scene17.addChild(ProtoDeclare36)
ProtoInstance45 = ProtoInstanceObject().setName("ShiftGroupUp2m")
Scene17.addChild(ProtoInstance45)

Scene17.addComments(CommentsBlock("===================="))
Viewpoint46 = ViewpointObject().setDEF("ExampleSingleElement").setDescription("Hello syntax")
Scene17.addChild(Viewpoint46)
Group47 = GroupObject().setDEF("ExampleChildElement")
Shape48 = ShapeObject()
Box49 = BoxObject()
Shape48.setGeometry(Box49)
Appearance50 = AppearanceObject()
Material51 = MaterialObject().setDiffuseColor([0.6,0.4,0.2])
Appearance50.setMaterial(Material51)
Shape48.setAppearance(Appearance50)
Group47.addChild(Shape48)
Scene17.addChild(Group47)
Transform52 = TransformObject().setDEF("TransformExampleUSE").setRotation([0,1,0,0.78]).setTranslation([0,2.5,0])
Group53 = GroupObject().setUSE("ExampleChildElement")
Transform52.addChild(Group53)
Scene17.addChild(Transform52)
Collision54 = CollisionObject()
Shape55 = ShapeObject()
Text56 = TextObject().setString(["He said, \"Immel did it!\""])
Shape55.setGeometry(Text56)

Shape55.addComments(CommentsBlock("alternative: Text string='\"He said, \\&quot;Immel did it!\\&quot;\"'"))
Appearance57 = AppearanceObject()
Material58 = MaterialObject()
Appearance57.setMaterial(Material58)
Shape55.setAppearance(Appearance57)
Collision54.setProxy(Shape55)
Group59 = GroupObject().setUSE("ExampleChildElement")
Collision54.addChild(Group59)
Scene17.addChild(Collision54)
Transform60 = TransformObject().setTranslation([0,-2.5,0])
Shape61 = ShapeObject()
Appearance62 = AppearanceObject()
ProtoInstance63 = ProtoInstanceObject().setName("EmissiveMaterial")
fieldValue64 = fieldValueObject().setName("onlyColor").setValue("0.2 0.6 0.6")
ProtoInstance63.addFieldValue(fieldValue64)
Appearance62.setMaterial(ProtoInstance63)
Shape61.setAppearance(Appearance62)
Text65 = TextObject().setString(["X3D Header Prototype syntax examples","(view console for EXTERNPROTO output)"])
FontStyle66 = FontStyleObject().setJustify(["MIDDLE","MIDDLE"]).setSize(0.6)
Text65.setFontStyle(FontStyle66)
Shape61.setGeometry(Text65)
Transform60.addChild(Shape61)
Scene17.addChild(Transform60)
ProtoInstance67 = ProtoInstanceObject().setName("ViewPositionOrientation")
fieldValue68 = fieldValueObject().setName("enabled").setValue("true")
ProtoInstance67.addFieldValue(fieldValue68)
Scene17.addChild(ProtoInstance67)
TimeSensor69 = TimeSensorObject().setDEF("Clock").setCycleInterval(4).setLoop(True)
Scene17.addChild(TimeSensor69)
OrientationInterpolator70 = OrientationInterpolatorObject().setDEF("Spinner").setKey([0,0.5,1]).setKeyValue([0,1,0,0,0,1,0,3.14159,0,1,0,6.28318])
Scene17.addChild(OrientationInterpolator70)
ROUTE71 = ROUTEObject().setFromField("fraction_changed").setFromNode("Clock").setToField("set_fraction").setToNode("Spinner")
Scene17.addChild(ROUTE71)
ROUTE72 = ROUTEObject().setFromField("value_changed").setFromNode("Spinner").setToField("rotation").setToNode("TransformExampleUSE")
Scene17.addChild(ROUTE72)
Inline73 = InlineObject().setDEF("someInline").setUrl(["someUrl.x3d","http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/someUrl.x3d"])
Scene17.addChild(Inline73)
IMPORT74 = IMPORTObject().setAS("someInlineRoot").setImportedDEF("someName").setInlineDEF("someInline")
Scene17.addChild(IMPORT74)
PositionInterpolator75 = PositionInterpolatorObject().setDEF("StayInPlace").setKey([0,1]).setKeyValue([0,0,0,0,0,0])
Scene17.addChild(PositionInterpolator75)
ROUTE76 = ROUTEObject().setFromField("fraction_changed").setFromNode("Clock").setToField("set_fraction").setToNode("StayInPlace")
Scene17.addChild(ROUTE76)
ROUTE77 = ROUTEObject().setFromField("value_changed").setFromNode("StayInPlace").setToField("set_translation").setToNode("someInlineRoot")
Scene17.addChild(ROUTE77)
X3D0.setScene(Scene17)

X3D0.toFileX3D("./X3dHeaderPrototypeSyntaxExamples.new.x3d")
