import x3dpsail


X3D0 = (x3dpsail.X3D().setProfile(x3dpsail.SFString("Immersive")).setVersion(x3dpsail.SFString("3.3"))
      .setHead(x3dpsail.head()
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("title")).setContent(x3dpsail.SFString("CameraExamples.x3d")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("description")).setContent(x3dpsail.SFString("Camera, CameraShot and CameraMove examples that demonstrate storyboard capabilities and precise camera operation. This is a developmental effort for potential X3D Specification improvement.")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("documentation")).setContent(x3dpsail.SFString("Two demos are found in the scene, click the \"red text\" on left or right to start. (a) SimpleShotsTest shows Zoom in/out, Pan left/right, Boom up/down, Tilt left/right, with each is defined by a CameraShot collecting a series of CameraMovements. (b) AimPointTest gradually slews the camera view to look at the sliding cube, then follows it around before returning to original viewpoint.")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("creator")).setContent(x3dpsail.SFString("Don Brutzman and Jeff Weekley")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("created")).setContent(x3dpsail.SFString("18 June 2009")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("modified")).setContent(x3dpsail.SFString("12 January 2014")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("TODO")).setContent(x3dpsail.SFString("Schematron rules, backed up by initialize() checks")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("reference")).setContent(x3dpsail.SFString("BeyondViewpointCameraNodesWeb3D2009.pdf")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("MovingImage")).setContent(x3dpsail.SFString("CameraExamplesDemo.mp4")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("reference")).setContent(x3dpsail.SFString("http://www.web3d.org/x3d/specifications/ISO-IEC-FDIS-19775-1.2-X3D-AbstractSpecification/Part01/components/navigation.html")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("subject")).setContent(x3dpsail.SFString("Camera nodes for Viewpoint navigation control")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("reference")).setContent(x3dpsail.SFString("CameraPrototypes.x3d")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("reference")).setContent(x3dpsail.SFString("CameraExamplesConsoleLog.txt")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("reference")).setContent(x3dpsail.SFString("http://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/content/examples/Basic/development/CameraExamples.avi")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("reference")).setContent(x3dpsail.SFString("http://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials/gridBack.x3d")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("identifier")).setContent(x3dpsail.SFString("http://www.web3d.org/x3d/content/examples/Basic/development/CameraExamples.x3d")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("identifier")).setContent(x3dpsail.SFString("http://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/content/examples/Basic/development/CameraExamples.x3d")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("generator")).setContent(x3dpsail.SFString("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit")))
        .addMeta(x3dpsail.meta().setName(x3dpsail.SFString("license")).setContent(x3dpsail.SFString("../license.html")))
        #TODO warn if more than one identifier present

        )
      .setScene(x3dpsail.Scene()
        #=============== Camera ==============

        .addChild(x3dpsail.ExternProtoDeclare().setName(x3dpsail.SFString("Camera")).setAppinfo(x3dpsail.SFString("Camera node provides direct control of scene view to enable cinematic camera animation shot by shot and move by move along with still digital-photography settings for offline rendering of camera images")).setUrl(x3dpsail.MFString(["CameraPrototypes.x3d#Camera","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#Camera","CameraPrototypes.wrl#Camera","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#Camera"]))
          #Viewpoint-related fields, NavigationInfo-related fields and Camera-unique fields

          .addField(x3dpsail.field().setName(x3dpsail.SFString("description")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Text description to be displayed for this Camera")).setType(x3dpsail.SFString("SFString")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("position")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Camera position in local transformation frame, which is default prior to first CameraShot initialPosition getting activated")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("orientation")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Camera rotation in local transformation frame, which is default prior to first CameraShot initialPosition getting activated")).setType(x3dpsail.SFString("SFRotation")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("fieldOfView")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("pi/4")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("set_fraction")).setAccessType(x3dpsail.SFString("inputOnly")).setAppinfo(x3dpsail.SFString("input fraction drives interpolators")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("set_bind")).setAccessType(x3dpsail.SFString("inputOnly")).setAppinfo(x3dpsail.SFString("input event binds or unbinds this Camera")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("bindTime")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("output event indicates when this Camera is bound")).setType(x3dpsail.SFString("SFTime")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("isBound")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("output event indicates whether this Camera is bound or unbound")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("nearClipPlane")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Vector distance to near clipping plane corresponds to NavigationInfo.avatarSize[0]")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("farClipPlane")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Vector distance to far clipping plane corresponds to NavigationInfo.visibilityLimit")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("shots")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Array of CameraShot nodes which in turn contain CameraMovement nodes")).setType(x3dpsail.SFString("MFNode")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("headlight")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Whether camera headlight is on or off")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("headlightColor")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Camera headlight color")).setType(x3dpsail.SFString("SFColor")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("headlightIntensity")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Camera headlight intensity")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("filterColor")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Camera filter color that modifies virtual lens capture")).setType(x3dpsail.SFString("SFColor")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("filterTransparency")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Camera filter transparency that modifies virtual lens capture")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("upVector")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("upVector changes modify camera orientation (and possibly vice versa)")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("fStop")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Focal length divided effective aperture diameter indicating width of focal plane")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("focusDistance")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Distance to focal plane of sharpest focus")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("isActive")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("Mark start/stop with true/false output respectively useful to trigger external animations")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("totalDuration")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("Total duration of contained enabled CameraShot (and thus CameraMovement) move durations")).setType(x3dpsail.SFString("SFTime")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("offlineRender")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("OfflineRender node")).setType(x3dpsail.SFString("SFNode")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("traceEnabled")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("enable console output to trace script computations and prototype progress")).setType(x3dpsail.SFString("SFBool"))))
        #=============== CameraShot ==============

        .addChild(x3dpsail.ExternProtoDeclare().setName(x3dpsail.SFString("CameraShot")).setAppinfo(x3dpsail.SFString("CameraShot collects a specific set of CameraMovement animations that make up an individual shot")).setUrl(x3dpsail.MFString(["CameraPrototypes.x3d#CameraShot","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#CameraShot","CameraPrototypes.wrl#CameraShot","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#CameraShot"]))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("description")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Text description to be displayed for this CameraShot")).setType(x3dpsail.SFString("SFString")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("enabled")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Whether this CameraShot can be activated")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("moves")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Set of CameraMovement nodes")).setType(x3dpsail.SFString("MFNode"))
            #initializing CameraMovement nodes are inserted here by scene author using ProtoInstance

            )
          .addField(x3dpsail.field().setName(x3dpsail.SFString("initialPosition")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Setup to reinitialize camera position for this shot")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("initialOrientation")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Setup to reinitialize camera rotation for this shot")).setType(x3dpsail.SFString("SFRotation")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("initialAimPoint")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Setup to reinitialize aimpoint (relative location for camera direction) for this shot")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("initialFieldOfView")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("pi/4")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("initialFStop")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Focal length divided effective aperture diameter indicating width of focal plane")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("initialFocusDistance")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Distance to focal plane of sharpest focus")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("shotDuration")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("Subtotal duration of contained CameraMovement move durations")).setType(x3dpsail.SFString("SFTime")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("isActive")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("Mark start/stop with true/false output respectively useful to trigger external animations")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("traceEnabled")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("enable console output to trace script computations and prototype progress")).setType(x3dpsail.SFString("SFBool"))))
        #=============== CameraMovement ==============

        .addChild(x3dpsail.ExternProtoDeclare().setName(x3dpsail.SFString("CameraMovement")).setAppinfo(x3dpsail.SFString("CameraMovement defines a single camera movement animation")).setUrl(x3dpsail.MFString(["CameraPrototypes.x3d#CameraMovement","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#CameraMovement","CameraPrototypes.wrl#CameraMovement","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#CameraMovement"]))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("description")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Text description to be displayed for this CameraMovement")).setType(x3dpsail.SFString("SFString")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("enabled")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Whether this CameraMovement can be activated")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("duration")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Duration in seconds for this move")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("goalPosition")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Goal camera position for this move")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("goalOrientation")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Goal camera rotation for this move")).setType(x3dpsail.SFString("SFRotation")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("tracking")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Whether or not camera direction is tracking towards the aimPoint")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("goalAimPoint")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Goal aimPoint for this move, ignored if tracking=false")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("goalFieldOfView")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Goal fieldOfView for this move")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("goalFStop")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Focal length divided effective aperture diameter indicating width of focal plane")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("goalFocusDistance")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Distance to focal plane of sharpest focus")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("isActive")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("Mark start/stop with true/false output respectively useful to trigger external animations")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("traceEnabled")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("enable console output to trace script computations and prototype progress")).setType(x3dpsail.SFString("SFBool"))))
        #=============== OfflineRender ==============

        .addChild(x3dpsail.ExternProtoDeclare().setName(x3dpsail.SFString("OfflineRender")).setAppinfo(x3dpsail.SFString("OfflineRender defines a parameters for offline rendering of Camera animation output to a movie file (or possibly a still shot)")).setUrl(x3dpsail.MFString(["CameraPrototypes.x3d#OfflineRender","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#OfflineRender","CameraPrototypes.wrl#OfflineRender","http://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#OfflineRender"]))
          #TODO non-photorealistic rendering (NPR) parameters

          .addField(x3dpsail.field().setName(x3dpsail.SFString("description")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Text description to be displayed for this OfflineRender")).setType(x3dpsail.SFString("SFString")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("enabled")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Whether this OfflineRender can be activated")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("frameRate")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Frames per second recorded for this rendering")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("frameSize")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Size of frame in number of pixels width and height")).setType(x3dpsail.SFString("SFVec2f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("pixelAspectRatio")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("Relative dimensions of pixel height/width typically 1.33 or 1")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("set_startTime")).setAccessType(x3dpsail.SFString("inputOnly")).setAppinfo(x3dpsail.SFString("Begin render operation")).setType(x3dpsail.SFString("SFTime")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("progress")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("Progress performing render operation (0..1)")).setType(x3dpsail.SFString("SFFloat")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("renderCompleteTime")).setAccessType(x3dpsail.SFString("outputOnly")).setAppinfo(x3dpsail.SFString("Render operation complete")).setType(x3dpsail.SFString("SFTime")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("movieFormat")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("Format of rendered output movie (mpeg mp4 etc.), use first supported format")).setType(x3dpsail.SFString("MFString")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("imageFormat")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("Format of rendered output images (png jpeg gif tiff etc.) use first supported format")).setType(x3dpsail.SFString("MFString")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("traceEnabled")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("enable console output to trace script computations and prototype progress")).setType(x3dpsail.SFString("SFBool"))))
        #=============== Lights, camera, action! ==============

        .addChild(x3dpsail.DirectionalLight().setDirection(x3dpsail.SFVec3f(0,-1,0)).setGlobal(x3dpsail.SFBool(True)).setIntensity(x3dpsail.SFFloat(0.8)))
        .addChild(x3dpsail.NavigationInfo().setType(x3dpsail.MFString(["EXAMINE","FLY","ANY"])))
        .addChild(x3dpsail.Viewpoint().setDescription(x3dpsail.SFString("Camera test scene entry view")).setPosition(x3dpsail.SFVec3f(0,2,12)))
        .addChild(x3dpsail.Viewpoint().setDescription(x3dpsail.SFString("Camera test scene from above")).setOrientation(x3dpsail.SFRotation(1,0,0,-1.57079)).setPosition(x3dpsail.SFVec3f(0,150,0)))
        #Keep prototype instances in same file while developing, then move later

        #We will create examples matching those in the paper

        #=============== Camera.SimpleShotsTest ==============

        .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("Camera")).setDEF(x3dpsail.SFString("Camera.SimpleShotsTest"))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("SimpleShotsTest for camera Zoom Dolly Pan Boom and Tilt")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("headlight")).setValue(x3dpsail.SFString("true")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("position")).setValue(x3dpsail.SFString("-4 4 10")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("shots"))
            .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraShot")).setDEF(x3dpsail.SFString("Zoom"))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Simple shot of Camera Zoom")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialPosition")).setValue(x3dpsail.SFString("-50 1 -10")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialOrientation")).setValue(x3dpsail.SFString("0 1 0 0")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("moves"))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Zoom In")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-50 1 -15")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Zoom Out")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-50 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Pause")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("1")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-50 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))))
            .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraShot")).setDEF(x3dpsail.SFString("Dolly"))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Simple shot of Camera Dolly")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialPosition")).setValue(x3dpsail.SFString("-40 1 -10")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialOrientation")).setValue(x3dpsail.SFString("0 1 0 0")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("moves"))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("DollyMove1"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Dolly from Right to Left")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-45 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Dolly from Left to Right")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-40 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Pause")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("1")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-40 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))))
            .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraShot")).setDEF(x3dpsail.SFString("Pan"))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Simple shot of Camera Pan left right and back to center")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialPosition")).setValue(x3dpsail.SFString("-30 1 -10")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialOrientation")).setValue(x3dpsail.SFString("0 1 0 0")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("moves"))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("PanLeft"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Pan Left")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("2")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-30 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0.4"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("PanRight"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Pan Right")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-30 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 -0.4"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Pan back to Center")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("2")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-30 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Pause")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("2")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-30 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))))
            .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraShot")).setDEF(x3dpsail.SFString("CameraBoom"))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Boom")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialPosition")).setValue(x3dpsail.SFString("-20 1 -10")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialOrientation")).setValue(x3dpsail.SFString("0 1 0 0")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("moves"))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("CameraBoomUp"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Boom Up")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-20 5 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("BoomDown"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Boom Down")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-20 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("BoomPause"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Pause")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("2")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-20 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0"))))))
            .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraShot")).setDEF(x3dpsail.SFString("CameraTilt"))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Tilt")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialPosition")).setValue(x3dpsail.SFString("-10 1 -10")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialOrientation")).setValue(x3dpsail.SFString("0 0 1 0")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("traceEnabled")).setValue(x3dpsail.SFString("true")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("moves"))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Tilt Pause")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("1")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-10 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 0 1 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("TiltDown"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Tilt Left")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-10 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 0 1 0.785"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("TiltPause"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Tilt Pause")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("1")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-10 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 0 1 0.785"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Tilt Right")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-10 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 0 1 -0.785"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Tilt Pause")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("1")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-10 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 0 1 -0.785"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("TiltReset"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Camera Tilt Reset")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("1")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("-10 1 -10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 0 1 0"))))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("TiltUp"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("Return to home")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("2")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("0 2 12")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 0 1 0"))))))))
        .addChild(x3dpsail.Group().setDEF(x3dpsail.SFString("AnimationGroup.SimpleShots"))
          .addChild(x3dpsail.TimeSensor().setDEF(x3dpsail.SFString("CameraTimer.SimpleShots")))
          #initialize clock to match totalDuration of combined Shot Moves

          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("totalDuration")).setFromNode(x3dpsail.SFString("Camera.SimpleShotsTest")).setToField(x3dpsail.SFString("cycleInterval")).setToNode(x3dpsail.SFString("CameraTimer.SimpleShots")))
          #TimeSensor animates the CameraClock since that maintains the computed PositionInterpolator and OrientationInterpolator

          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("fraction_changed")).setFromNode(x3dpsail.SFString("CameraTimer.SimpleShots")).setToField(x3dpsail.SFString("set_fraction")).setToNode(x3dpsail.SFString("Camera.SimpleShotsTest")))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("Trigger.SimpleShots")).setTranslation(x3dpsail.SFVec3f(-4,4,0))
            .addChild(x3dpsail.BooleanFilter().setDEF(x3dpsail.SFString("TextTouchActive.SimpleShotsFilter")))
            .addChild(x3dpsail.TouchSensor().setDEF(x3dpsail.SFString("TextTouch.SimpleShots")).setDescription(x3dpsail.SFString("touch to animate Camera SimpleShotsTest")))
            .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("inputTrue")).setFromNode(x3dpsail.SFString("TextTouchActive.SimpleShotsFilter")).setToField(x3dpsail.SFString("set_bind")).setToNode(x3dpsail.SFString("Camera.SimpleShotsTest")))
            .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("isActive")).setFromNode(x3dpsail.SFString("TextTouch.SimpleShots")).setToField(x3dpsail.SFString("set_boolean")).setToNode(x3dpsail.SFString("TextTouchActive.SimpleShotsFilter")))
            .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("touchTime")).setFromNode(x3dpsail.SFString("TextTouch.SimpleShots")).setToField(x3dpsail.SFString("startTime")).setToNode(x3dpsail.SFString("CameraTimer.SimpleShots")))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["Click to animate","SimpleShotsTest"]))
                .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"]))))
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material().setDEF(x3dpsail.SFString("ArtDeco5")).setAmbientIntensity(x3dpsail.SFFloat(0.24)).setDiffuseColor(x3dpsail.SFColor(0.945455,0.318988,0.321717)).setShininess(x3dpsail.SFFloat(0.01)).setSpecularColor(x3dpsail.SFColor(0.072727,0.021705,0.010732))
                  #Universal Media Library: ArtDeco 5

                  )))
            #Simplify intersection test for user selecting text

            .addChild(x3dpsail.Shape().setDEF(x3dpsail.SFString("TransparentBox"))
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material().setTransparency(x3dpsail.SFFloat(1))))
              .setGeometry(x3dpsail.Box().setSize(x3dpsail.SFVec3f(6,2,0.0001))))))
        .addChild(x3dpsail.Group().setDEF(x3dpsail.SFString("SimpleShotsTargets"))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("TargetBoxZoom")).setTranslation(x3dpsail.SFVec3f(-50,1,-20))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Box())
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material())
                .setTexture(x3dpsail.ImageTexture().setUrl(x3dpsail.MFString(["images/CameraMoveZoom.png","http://www.web3d.org/x3d/content/examples/Basic/development/images/CameraMoveZoom.png"])))))
            .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,2,0))
              .addChild(x3dpsail.Shape()
                .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["Zoom in, out"]))
                  .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"]))))
                .setAppearance(x3dpsail.Appearance()
                  .setMaterial(x3dpsail.Material())))))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("TargetBoxDolly")).setTranslation(x3dpsail.SFVec3f(-40,1,-20))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Box())
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material())
                .setTexture(x3dpsail.ImageTexture().setUrl(x3dpsail.MFString(["images/CameraMoveDolly.png","http://www.web3d.org/x3d/content/examples/Basic/development/images/CameraMoveDolly.png"])))))
            .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,2,0))
              .addChild(x3dpsail.Shape()
                .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["Dolly left, right"]))
                  .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"]))))
                .setAppearance(x3dpsail.Appearance()
                  .setMaterial(x3dpsail.Material())))))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("TargetBoxPan")).setTranslation(x3dpsail.SFVec3f(-30,1,-20))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Box())
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material())
                .setTexture(x3dpsail.ImageTexture().setUrl(x3dpsail.MFString(["images/CameraMovePan.png","http://www.web3d.org/x3d/content/examples/Basic/development/images/CameraMovePan.png"])))))
            .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,2,0))
              .addChild(x3dpsail.Shape()
                .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["Pan left, right"]))
                  .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"]))))
                .setAppearance(x3dpsail.Appearance()
                  .setMaterial(x3dpsail.Material())))))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("TargetBoxBoom")).setTranslation(x3dpsail.SFVec3f(-20,1,-20))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Box())
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material())
                .setTexture(x3dpsail.ImageTexture().setUrl(x3dpsail.MFString(["images/CameraMoveBoom.png","http://www.web3d.org/x3d/content/examples/Basic/development/images/CameraMoveBoom.png"])))))
            .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,2,0))
              .addChild(x3dpsail.Shape()
                .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["Boom up, down"]))
                  .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"]))))
                .setAppearance(x3dpsail.Appearance()
                  .setMaterial(x3dpsail.Material())))))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("TargetBoxTilt")).setTranslation(x3dpsail.SFVec3f(-10,1,-20))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Box())
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material())
                .setTexture(x3dpsail.ImageTexture().setUrl(x3dpsail.MFString(["images/CameraMoveTilt.png","http://www.web3d.org/x3d/content/examples/Basic/development/images/CameraMoveTilt.png"])))))
            .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,2,0))
              .addChild(x3dpsail.Shape()
                .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["Tilt left, right"]))
                  .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"]))))
                .setAppearance(x3dpsail.Appearance()
                  .setMaterial(x3dpsail.Material()))))))
        #=============== Camera.AimPointTest ==============

        .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("Camera")).setDEF(x3dpsail.SFString("Camera.AimPointTest"))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("AimPointTest for moving camera tracking moving target")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("position")).setValue(x3dpsail.SFString("4 4 10")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("shots"))
            .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraShot")).setDEF(x3dpsail.SFString("Shot5"))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("#3 Tracking shot")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialPosition")).setValue(x3dpsail.SFString("6 6 10")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("initialOrientation")).setValue(x3dpsail.SFString("0 1 0 0")))
              .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("moves"))
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("MoveAimPoint3.1"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("AimPoint 3.1 moving BoxPath")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("tracking")).setValue(x3dpsail.SFString("true")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("8")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("6 6 10")))
                  #goalAimPoint modified by ROUTE to match moving Box

                  )
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("MoveAimPoint3.2"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("AimPoint 3.2 pan right while tracking")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("tracking")).setValue(x3dpsail.SFString("true")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("8")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("40 6 12")))
                  #goalAimPoint modified by ROUTE to match moving Box

                  )
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("MoveAimPoint3.3"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("AimPoint 3.3 boom up while tracking")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("tracking")).setValue(x3dpsail.SFString("true")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("3")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("40 20 13")))
                  #goalAimPoint modified by ROUTE to match moving Box

                  )
                .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CameraMovement")).setDEF(x3dpsail.SFString("MoveAimPoint3.4"))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("description")).setValue(x3dpsail.SFString("AimPoint 3.4 restore camera back to home")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("tracking")).setValue(x3dpsail.SFString("true")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("duration")).setValue(x3dpsail.SFString("5")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalPosition")).setValue(x3dpsail.SFString("4 4 10")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalAimPoint")).setValue(x3dpsail.SFString("4 4 0")))
                  .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("goalOrientation")).setValue(x3dpsail.SFString("0 1 0 0")))
                  #can test tracking or not using following values

                  )))))
        .addChild(x3dpsail.Group().setDEF(x3dpsail.SFString("AnimationGroup.AimPointTest"))
          .addChild(x3dpsail.TimeSensor().setDEF(x3dpsail.SFString("CameraTimer.AimPointTest")))
          #initialize clock to match totalDuration of combined Shot Moves

          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("totalDuration")).setFromNode(x3dpsail.SFString("Camera.AimPointTest")).setToField(x3dpsail.SFString("cycleInterval")).setToNode(x3dpsail.SFString("CameraTimer.AimPointTest")))
          #TimeSensor animates the CameraClock since that maintains the computed PositionInterpolator and OrientationInterpolator

          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("fraction_changed")).setFromNode(x3dpsail.SFString("CameraTimer.AimPointTest")).setToField(x3dpsail.SFString("set_fraction")).setToNode(x3dpsail.SFString("Camera.AimPointTest")))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("Trigger.AimPointTest")).setTranslation(x3dpsail.SFVec3f(4,4,0))
            .addChild(x3dpsail.BooleanFilter().setDEF(x3dpsail.SFString("TextTouchActive.AimPointFilter")))
            .addChild(x3dpsail.TouchSensor().setDEF(x3dpsail.SFString("TextTouch.AimPointTest")).setDescription(x3dpsail.SFString("touch to animate Camera AimPointTest")))
            .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("inputTrue")).setFromNode(x3dpsail.SFString("TextTouchActive.AimPointFilter")).setToField(x3dpsail.SFString("set_bind")).setToNode(x3dpsail.SFString("Camera.AimPointTest")))
            .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("isActive")).setFromNode(x3dpsail.SFString("TextTouch.AimPointTest")).setToField(x3dpsail.SFString("set_boolean")).setToNode(x3dpsail.SFString("TextTouchActive.AimPointFilter")))
            .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("touchTime")).setFromNode(x3dpsail.SFString("TextTouch.AimPointTest")).setToField(x3dpsail.SFString("startTime")).setToNode(x3dpsail.SFString("CameraTimer.AimPointTest")))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["Click to animate","AimPointTest"]))
                .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"]))))
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material().setUSE(x3dpsail.SFString("ArtDeco5")))))
            .addChild(x3dpsail.Shape().setUSE(x3dpsail.SFString("TransparentBox")))))
        #TODO build a test once implemented

        .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("OfflineRender")))
        #=============== animate a camera shape to visualize view changes ==============

        .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("CameraShapeTransform")).setTranslation(x3dpsail.SFVec3f(0,0.5,0))
          #move CameraShape using active Camera

          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("position_changed")).setFromNode(x3dpsail.SFString("Camera.SimpleShotsTest")).setToField(x3dpsail.SFString("translation")).setToNode(x3dpsail.SFString("CameraShapeTransform")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("orientation_changed")).setFromNode(x3dpsail.SFString("Camera.SimpleShotsTest")).setToField(x3dpsail.SFString("rotation")).setToNode(x3dpsail.SFString("CameraShapeTransform")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("position")).setFromNode(x3dpsail.SFString("Camera.AimPointTest")).setToField(x3dpsail.SFString("translation")).setToNode(x3dpsail.SFString("CameraShapeTransform")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("orientation_changed")).setFromNode(x3dpsail.SFString("Camera.AimPointTest")).setToField(x3dpsail.SFString("rotation")).setToNode(x3dpsail.SFString("CameraShapeTransform")))
          .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("CameraOffsetTransform")).setTranslation(x3dpsail.SFVec3f(0,0,0.25))
            .addChild(x3dpsail.TouchSensor().setDEF(x3dpsail.SFString("CameraShapeTouched")))
            .addChild(x3dpsail.Inline().setDEF(x3dpsail.SFString("CameraShape")).setUrl(x3dpsail.MFString(["CameraShape.x3d","http://www.web3d.org/x3d/content/examples/Basic/development/CameraShape.x3d"])))
            .addChild(x3dpsail.Shape().setDEF(x3dpsail.SFString("SightLine"))
              .setGeometry(x3dpsail.IndexedLineSet().setCoordIndex(x3dpsail.MFInt32([0,1]))
                .setCoord(x3dpsail.Coordinate().setPoint(x3dpsail.MFVec3f([0,0,0,0,0,-100]))))
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material().setEmissiveColor(x3dpsail.SFColor(0.8,0.8,0.4))))))
          #Display frustum to show camera view within the scene, toggled by user selecting CameraShape

          .addChild(x3dpsail.ExternProtoDeclare().setName(x3dpsail.SFString("ViewFrustum")).setAppinfo(x3dpsail.SFString("Display view frustum associated with a given pair of Viewpoint NavigationInfo nodes")).setUrl(x3dpsail.MFString(["../../X3dForWebAuthors/Chapter14Prototypes/ViewFrustumPrototype.x3d#ViewFrustum","http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ViewFrustumPrototype.x3d#ViewFrustum","../../X3dForWebAuthors/Chapter14Prototypes/ViewFrustumPrototype.wrl#ViewFrustum","http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ViewFrustumPrototype.wrl#ViewFrustum"]))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("ViewpointNode")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("required: insert Viewpoint DEF or USE node for view of interest")).setType(x3dpsail.SFString("SFNode")))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("NavigationInfoNode")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("required: insert NavigationInfo DEF or USE node of interest")).setType(x3dpsail.SFString("SFNode")))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("visible")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("whether or not frustum geometry is rendered")).setType(x3dpsail.SFString("SFBool")))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("lineColor")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("RGB color of ViewFrustum outline, default value 0.9 0.9 0.9")).setType(x3dpsail.SFString("SFColor")))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("frustumColor")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("RGB color of ViewFrustum hull geometry, default value 0.8 0.8 0.8")).setType(x3dpsail.SFString("SFColor")))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("transparency")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("transparency of ViewFrustum hull geometry, default value 0.5")).setType(x3dpsail.SFString("SFFloat")))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("aspectRatio")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("assumed ratio height/width, default value 0.75")).setType(x3dpsail.SFString("SFFloat")))
            .addField(x3dpsail.field().setName(x3dpsail.SFString("trace")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("debug support, default false")).setType(x3dpsail.SFString("SFBool"))))
          .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("ViewFrustum")).setDEF(x3dpsail.SFString("ViewFrustumNode"))
            .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("ViewpointNode"))
              .addChild(x3dpsail.Viewpoint().setDEF(x3dpsail.SFString("FrustumViewpoint")).setDescription(x3dpsail.SFString("viewpoint for ViewFrustum")).setPosition(x3dpsail.SFVec3f(0,0,0))))
            .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("NavigationInfoNode"))
              .addChild(x3dpsail.NavigationInfo().setDEF(x3dpsail.SFString("TestNavigationInfo")).setTransitionType(x3dpsail.MFString(["ANIMATE"])).setVisibilityLimit(x3dpsail.SFFloat(100))))
            .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("visible")).setValue(x3dpsail.SFString("false")))
            .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("lineColor")).setValue(x3dpsail.SFString("0.9 0.9 0.9")))
            .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("frustumColor")).setValue(x3dpsail.SFString("0.8 0.8 0.8")))
            .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("transparency")).setValue(x3dpsail.SFString("0.95"))))
          .addChild(x3dpsail.BooleanToggle().setDEF(x3dpsail.SFString("ViewFrustumToggle")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("isActive")).setFromNode(x3dpsail.SFString("CameraShapeTouched")).setToField(x3dpsail.SFString("set_boolean")).setToNode(x3dpsail.SFString("ViewFrustumToggle")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("toggle")).setFromNode(x3dpsail.SFString("ViewFrustumToggle")).setToField(x3dpsail.SFString("set_visible")).setToNode(x3dpsail.SFString("ViewFrustumNode"))))
        #=============== add checkerboard, axes and other things to look at while animating ==============

        .addChild(x3dpsail.Background().setSkyColor(x3dpsail.MFColor([0.282353,0.380392,0.470588])))
        .addChild(x3dpsail.Transform().setRotation(x3dpsail.SFRotation(1,0,0,-1.57079)).setScale(x3dpsail.SFVec3f(10,10,10))
          .addChild(x3dpsail.Shape()
            .setAppearance(x3dpsail.Appearance()
              .setMaterial(x3dpsail.Material().setAmbientIntensity(x3dpsail.SFFloat(0.01)).setDiffuseColor(x3dpsail.SFColor(1,1,1)).setShininess(x3dpsail.SFFloat(0.05))))
            .setGeometry(x3dpsail.IndexedFaceSet().setColorIndex(x3dpsail.MFInt32([0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0])).setColorPerVertex(x3dpsail.SFBool(False)).setCoordIndex(x3dpsail.MFInt32([0,8,9,1,-1,1,9,10,2,-1,2,10,11,3,-1,3,11,12,4,-1,4,12,13,5,-1,5,13,14,6,-1,6,14,15,7,-1,8,16,17,9,-1,9,17,18,10,-1,10,18,19,11,-1,11,19,20,12,-1,12,20,21,13,-1,13,21,22,14,-1,14,22,23,15,-1,16,24,25,17,-1,17,25,26,18,-1,18,26,27,19,-1,19,27,28,20,-1,20,28,29,21,-1,21,29,30,22,-1,22,30,31,23,-1,24,32,33,25,-1,25,33,34,26,-1,26,34,35,27,-1,27,35,36,28,-1,28,36,37,29,-1,29,37,38,30,-1,30,38,39,31,-1,32,40,41,33,-1,33,41,42,34,-1,34,42,43,35,-1,35,43,44,36,-1,36,44,45,37,-1,37,45,46,38,-1,38,46,47,39,-1,40,48,49,41,-1,41,49,50,42,-1,42,50,51,43,-1,43,51,52,44,-1,44,52,53,45,-1,45,53,54,46,-1,46,54,55,47,-1,48,56,57,49,-1,49,57,58,50,-1,50,58,59,51,-1,51,59,60,52,-1,52,60,61,53,-1,53,61,62,54,-1,54,62,63,55,-1])).setNormalPerVertex(x3dpsail.SFBool(False)).setSolid(x3dpsail.SFBool(False))
              .setCoord(x3dpsail.Coordinate().setPoint(x3dpsail.MFVec3f([-5.25,5.25,0,-3.75,5.25,0,-2.25,5.25,0,-0.75,5.25,0,0.75,5.25,0,2.25,5.25,0,3.75,5.25,0,5.25,5.25,0,-5.25,3.75,0,-3.75,3.75,0,-2.25,3.75,0,-0.75,3.75,0,0.75,3.75,0,2.25,3.75,0,3.75,3.75,0,5.25,3.75,0,-5.25,2.25,0,-3.75,2.25,0,-2.25,2.25,0,-0.75,2.25,0,0.75,2.25,0,2.25,2.25,0,3.75,2.25,0,5.25,2.25,0,-5.25,0.75,0,-3.75,0.75,0,-2.25,0.75,0,-0.75,0.75,0,0.75,0.75,0,2.25,0.75,0,3.75,0.75,0,5.25,0.75,0,-5.25,-0.75,0,-3.75,-0.75,0,-2.25,-0.75,0,-0.75,-0.75,0,0.75,-0.75,0,2.25,-0.75,0,3.75,-0.75,0,5.25,-0.75,0,-5.25,-2.25,0,-3.75,-2.25,0,-2.25,-2.25,0,-0.75,-2.25,0,0.75,-2.25,0,2.25,-2.25,0,3.75,-2.25,0,5.25,-2.25,0,-5.25,-3.75,0,-3.75,-3.75,0,-2.25,-3.75,0,-0.75,-3.75,0,0.75,-3.75,0,2.25,-3.75,0,3.75,-3.75,0,5.25,-3.75,0,-5.25,-5.25,0,-3.75,-5.25,0,-2.25,-5.25,0,-0.75,-5.25,0,0.75,-5.25,0,2.25,-5.25,0,3.75,-5.25,0,5.25,-5.25,0])))
              .setColor(x3dpsail.Color().setColor(x3dpsail.MFColor([0.435294,0.741176,0,0,0.560784,0.580392]))))))
        .addChild(x3dpsail.Transform().setScale(x3dpsail.SFVec3f(3,3,3)).setTranslation(x3dpsail.SFVec3f(0,0.25,0))
          .addChild(x3dpsail.Inline().setDEF(x3dpsail.SFString("CoordinateAxes")).setUrl(x3dpsail.MFString(["../../X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.x3d","../../Savage/Tools/Authoring/CoordinateAxes.x3d","http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.x3d","https://savage.nps.edu/Savage/Tools/Authoring/CoordinateAxes.x3d","../../X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.wrl","../../Savage/Tools/Authoring/CoordinateAxes.wrl","http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.wrl","https://savage.nps.edu/Savage/Tools/Authoring/CoordinateAxes.wrl"]))))
        .addChild(x3dpsail.Transform().setDEF(x3dpsail.SFString("MovingBoxTransform"))
          .addChild(x3dpsail.PositionInterpolator().setDEF(x3dpsail.SFString("BoxPath")).setKey(x3dpsail.MFFloat([0,0.25,0.5,0.75,1])).setKeyValue(x3dpsail.MFVec3f([-5,1,5,45,1,5,45,1,-45,-5,1,-45,-5,1,5])))
          .addChild(x3dpsail.TimeSensor().setDEF(x3dpsail.SFString("BoxTimer")).setCycleInterval(x3dpsail.SFTime(10)).setLoop(x3dpsail.SFBool(True)))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("value_changed")).setFromNode(x3dpsail.SFString("BoxPath")).setToField(x3dpsail.SFString("translation")).setToNode(x3dpsail.SFString("MovingBoxTransform")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("value_changed")).setFromNode(x3dpsail.SFString("BoxPath")).setToField(x3dpsail.SFString("goalAimPoint")).setToNode(x3dpsail.SFString("MoveAimPoint3.1")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("value_changed")).setFromNode(x3dpsail.SFString("BoxPath")).setToField(x3dpsail.SFString("goalAimPoint")).setToNode(x3dpsail.SFString("MoveAimPoint3.2")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("value_changed")).setFromNode(x3dpsail.SFString("BoxPath")).setToField(x3dpsail.SFString("goalAimPoint")).setToNode(x3dpsail.SFString("MoveAimPoint3.3")))
          .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("fraction_changed")).setFromNode(x3dpsail.SFString("BoxTimer")).setToField(x3dpsail.SFString("set_fraction")).setToNode(x3dpsail.SFString("BoxPath")))
          .addChild(x3dpsail.Shape()
            .setGeometry(x3dpsail.Box())
            .setAppearance(x3dpsail.Appearance()
              .setMaterial(x3dpsail.Material())
              .setTexture(x3dpsail.ImageTexture().setUrl(x3dpsail.MFString(["../earth-topo.png","http://www.web3d.org/x3d/content/examples/Basic/earth-topo.png"]))))))
        #================ CrossHair visualization for center of screen ================

        .addChild(x3dpsail.ExternProtoDeclare().setName(x3dpsail.SFString("CrossHair")).setAppinfo(x3dpsail.SFString("CrossHair prototype provides a heads-up display (HUD) crosshair at the view center, which is useful for assessing NavigationInfo lookAt point")).setUrl(x3dpsail.MFString(["../../Savage/Tools/HeadsUpDisplays/CrossHairPrototype.x3d#CrossHair","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/CrossHairPrototype.x3d#CrossHair","../../Savage/Tools/HeadsUpDisplays/CrossHairPrototype.wrl#CrossHair","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/CrossHairPrototype.wrl#CrossHair"]))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("enabled")).setAccessType(x3dpsail.SFString("initializeOnly")).setAppinfo(x3dpsail.SFString("whether CrissHair orititype is enabled or not")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("set_enabled")).setAccessType(x3dpsail.SFString("inputOnly")).setAppinfo(x3dpsail.SFString("control whether enabled/disabled")).setType(x3dpsail.SFString("SFBool")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("markerColor")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("color of CrossHair marker")).setType(x3dpsail.SFString("SFColor")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("scale")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("size of CrossHair in meters")).setType(x3dpsail.SFString("SFVec3f")))
          .addField(x3dpsail.field().setName(x3dpsail.SFString("positionOffsetFromCamera")).setAccessType(x3dpsail.SFString("inputOutput")).setAppinfo(x3dpsail.SFString("distance in front of HUD viewpoint")).setType(x3dpsail.SFString("SFVec3f"))))
        .addChild(x3dpsail.ProtoInstance().setName(x3dpsail.SFString("CrossHair")).setDEF(x3dpsail.SFString("CrossHairInstance"))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("enabled")).setValue(x3dpsail.SFString("true")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("markerColor")).setValue(x3dpsail.SFString("1 0.5 0")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("scale")).setValue(x3dpsail.SFString("1 1 1")))
          .addFieldValue(x3dpsail.fieldValue().setName(x3dpsail.SFString("positionOffsetFromCamera")).setValue(x3dpsail.SFString("0 0 -6"))))
        #turn on CrossHairInstance when animated camera viewpoints are bound

        .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("isBound")).setFromNode(x3dpsail.SFString("Camera.SimpleShotsTest")).setToField(x3dpsail.SFString("set_enabled")).setToNode(x3dpsail.SFString("CrossHairInstance")))
        .addChild(x3dpsail.ROUTE().setFromField(x3dpsail.SFString("isBound")).setFromNode(x3dpsail.SFString("Camera.AimPointTest")).setToField(x3dpsail.SFString("set_enabled")).setToNode(x3dpsail.SFString("CrossHairInstance")))
        #turn off CrossHairInstance when animated camera viewpoints are unbound <BooleanFilter DEF='NegateCrossHair'/> <ROUTE fromField='isBound' fromNode='Camera.SimpleShotsTest' toField='set_boolean' toNode='NegateCrossHair'/> <ROUTE fromField='isBound' fromNode='Camera.AimPointTest' toField='set_boolean' toNode='NegateCrossHair'/> <ROUTE fromField='inputNegate' fromNode='NegateCrossHair' toField='set_enabled' toNode='CrossHairInstance'/>

        #=============== TODO Launch Prototype Example ==============

        .addChild(x3dpsail.Anchor().setDescription(x3dpsail.SFString("launch CameraExample scene")).setParameter(x3dpsail.MFString(["target=_blank"])).setUrl(x3dpsail.MFString(["CameraExample.x3d","http://www.web3d.org/x3d/content/examples/Basic/development/CameraExample.x3d","CameraExample.wrl","http://www.web3d.org/x3d/content/examples/Basic/development/CameraExample.wrl"]))
          .addChild(x3dpsail.Transform().setTranslation(x3dpsail.SFVec3f(0,-3,0))
            .addChild(x3dpsail.Shape()
              .setGeometry(x3dpsail.Text().setString(x3dpsail.MFString(["CameraPrototype","defines a prototype","","Click on this text to see","CameraExample scene"]))
                .setFontStyle(x3dpsail.FontStyle().setJustify(x3dpsail.MFString(["MIDDLE","MIDDLE"])).setSize(x3dpsail.SFFloat(0.5))))
              .setAppearance(x3dpsail.Appearance()
                .setMaterial(x3dpsail.Material().setDiffuseColor(x3dpsail.SFColor(1,1,0.2)))))))))

X3D0.toFileX3D("./future/./CameraExamples_RoundTrip.x3d")
